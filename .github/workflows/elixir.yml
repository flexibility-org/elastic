# This setup is heavily inspired by
# https://hashrocket.com/blog/posts/build-the-ultimate-elixir-ci-with-github-actions

name: Elixir CI

on: push

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        elixir_version:
          - 1.9.4
          - 1.10.1
        elasticsearch_version:
          - 6.6.2
          - 7.6.0
        otp_version:
          - 22.2
          - 23.0


    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Setup elixir
      uses: actions/setup-elixir@v1
      with:
        elixir-version: ${{ matrix.elixir_version }}
        otp-version: ${{ matrix.otp_version }}

    - name: Retrieve Mix Dependencies Cache
      uses: actions/cache@v1
      id: mix-cache
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Install Dependencies
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: mix deps.get

    - name: Check Formatting
      run: mix format --check-formatted

    - name: Run Credo
      run: mix credo --strict

    - name: Retrieve PLT Cache
      uses: actions/cache@v1
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Create PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt

    - name: Run dialyzer
      run: mix dialyzer --no-check --halt-exit-status

    - name: Setup ElasticSearch
      run: docker run -d -p 9200:9200 -p 9300:9300 -e 'discovery.type=single-node' elasticsearch:${{matrix.elasticsearch_version}}

    - name: Sleepy Time (Wait for Elastic Search to boot up)
      run: |
        git clone https://github.com/vishnubob/wait-for-it
        ./wait-for-it/wait-for-it.sh localhost:9200

    - name: Run Tests
      run: mix test --include integration
